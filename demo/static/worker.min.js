var _;let O;function A(_){return _ instanceof Error?_.message:"string"==typeof _?_:"An unknown error has occured, and a message was unable to be parsed from this error"}!function(_){var O,A;(O=_.Methods||(_.Methods={}))[O.LoadArgon2=0]="LoadArgon2",O[O.Hash2i=1]="Hash2i",(A=_.ErrorCodes||(_.ErrorCodes={}))[A.ARGON2_OK=0]="ARGON2_OK",A[A.ARGON2_OUTPUT_PTR_NULL=-1]="ARGON2_OUTPUT_PTR_NULL",A[A.ARGON2_OUTPUT_TOO_SHORT=-2]="ARGON2_OUTPUT_TOO_SHORT",A[A.ARGON2_OUTPUT_TOO_LONG=-3]="ARGON2_OUTPUT_TOO_LONG",A[A.ARGON2_PWD_TOO_SHORT=-4]="ARGON2_PWD_TOO_SHORT",A[A.ARGON2_PWD_TOO_LONG=-5]="ARGON2_PWD_TOO_LONG",A[A.ARGON2_SALT_TOO_SHORT=-6]="ARGON2_SALT_TOO_SHORT",A[A.ARGON2_SALT_TOO_LONG=-7]="ARGON2_SALT_TOO_LONG",A[A.ARGON2_AD_TOO_SHORT=-8]="ARGON2_AD_TOO_SHORT",A[A.ARGON2_AD_TOO_LONG=-9]="ARGON2_AD_TOO_LONG",A[A.ARGON2_SECRET_TOO_SHORT=-10]="ARGON2_SECRET_TOO_SHORT",A[A.ARGON2_SECRET_TOO_LONG=-11]="ARGON2_SECRET_TOO_LONG",A[A.ARGON2_TIME_TOO_SMALL=-12]="ARGON2_TIME_TOO_SMALL",A[A.ARGON2_TIME_TOO_LARGE=-13]="ARGON2_TIME_TOO_LARGE",A[A.ARGON2_MEMORY_TOO_LITTLE=-14]="ARGON2_MEMORY_TOO_LITTLE",A[A.ARGON2_MEMORY_TOO_MUCH=-15]="ARGON2_MEMORY_TOO_MUCH",A[A.ARGON2_LANES_TOO_FEW=-16]="ARGON2_LANES_TOO_FEW",A[A.ARGON2_LANES_TOO_MANY=-17]="ARGON2_LANES_TOO_MANY",A[A.ARGON2_PWD_PTR_MISMATCH=-18]="ARGON2_PWD_PTR_MISMATCH",A[A.ARGON2_SALT_PTR_MISMATCH=-19]="ARGON2_SALT_PTR_MISMATCH",A[A.ARGON2_SECRET_PTR_MISMATCH=-20]="ARGON2_SECRET_PTR_MISMATCH",A[A.ARGON2_AD_PTR_MISMATCH=-21]="ARGON2_AD_PTR_MISMATCH",A[A.ARGON2_MEMORY_ALLOCATION_ERROR=-22]="ARGON2_MEMORY_ALLOCATION_ERROR",A[A.ARGON2_FREE_MEMORY_CBK_NULL=-23]="ARGON2_FREE_MEMORY_CBK_NULL",A[A.ARGON2_ALLOCATE_MEMORY_CBK_NULL=-24]="ARGON2_ALLOCATE_MEMORY_CBK_NULL",A[A.ARGON2_INCORRECT_PARAMETER=-25]="ARGON2_INCORRECT_PARAMETER",A[A.ARGON2_INCORRECT_TYPE=-26]="ARGON2_INCORRECT_TYPE",A[A.ARGON2_OUT_PTR_MISMATCH=-27]="ARGON2_OUT_PTR_MISMATCH",A[A.ARGON2_THREADS_TOO_FEW=-28]="ARGON2_THREADS_TOO_FEW",A[A.ARGON2_THREADS_TOO_MANY=-29]="ARGON2_THREADS_TOO_MANY",A[A.ARGON2_MISSING_ARGS=-30]="ARGON2_MISSING_ARGS",A[A.ARGON2_ENCODING_FAIL=-31]="ARGON2_ENCODING_FAIL",A[A.ARGON2_DECODING_FAIL=-32]="ARGON2_DECODING_FAIL",A[A.ARGON2_THREAD_FAIL=-33]="ARGON2_THREAD_FAIL",A[A.ARGON2_DECODING_LENGTH_FAIL=-34]="ARGON2_DECODING_LENGTH_FAIL",A[A.ARGON2_VERIFY_MISMATCH=-35]="ARGON2_VERIFY_MISMATCH",A[A.ARGON2WASM_UNKNOWN=1]="ARGON2WASM_UNKNOWN",A[A.ARGON2WASM_BAD_REQUEST=2]="ARGON2WASM_BAD_REQUEST",A[A.ARGON2WASM_UNSUPPORTED_BROWSER=3]="ARGON2WASM_UNSUPPORTED_BROWSER"}(_||(_={}));const R=(_,O=[])=>{self.postMessage(_,O)};function N(_,O=1){for(let A=0;A<O;A++)for(let O=0;O<_.length;O++)_[O]=0}async function T(O=".",A=!1){if("object"!=typeof WebAssembly)throw _.ErrorCodes.ARGON2WASM_UNSUPPORTED_BROWSER;const R={env:{emscripten_notify_memory_growth(){}}},N=A&&await async function(_="."){const O=await fetch(`${_}/simd-test.wasm`),A=await O.arrayBuffer();return WebAssembly.validate(A)}(O)?"argon2-simd.wasm":"argon2.wasm";let T;if("function"==typeof WebAssembly.instantiateStreaming)T=await WebAssembly.instantiateStreaming(fetch(`${O}/${N}`),R);else{const _=await fetch(`${O}/${N}`),A=await _.arrayBuffer();T=await WebAssembly.instantiate(A,R)}return T.instance.exports}onmessage=async function(e){(Array.isArray(e.data)||"object"!=typeof e.data)&&R({code:_.ErrorCodes.ARGON2WASM_BAD_REQUEST});const r=e.data;switch(r.method){case _.Methods.LoadArgon2:try{const _=r.params;O=await T(_.wasmRoot,_.simd)}catch(O){return void function(O){O in _.ErrorCodes?R({code:O}):R({code:_.ErrorCodes.ARGON2WASM_UNKNOWN,message:A(O)})}(O)}R({code:_.ErrorCodes.ARGON2_OK});break;case _.Methods.Hash2i:const e=function(_){const A=_.salt.byteLength,R=O.malloc(A);let T=new Uint8Array(O.memory.buffer,R,A);for(let O=0;O<A;O++)T[O]=_.salt[O];const e=(new TextEncoder).encode(_.password.normalize("NFKC")),r=e.byteLength,t=O.malloc(r);let G=new Uint8Array(O.memory.buffer,t,r);for(let _=0;_<r;_++)G[_]=e[_];N(e);const o=_.hashLen,a=O.malloc(o),E=O.argon2i_hash_raw(_.timeCost,_.memoryCost,1,t,r,R,A,a,o);G=new Uint8Array(O.memory.buffer,t,r),N(G),O.free(t),T=new Uint8Array(O.memory.buffer,R,A),N(T),O.free(R),N(_.salt);const n=new Uint8Array(o),s=new Uint8Array(O.memory.buffer,a,o);for(let _=0;_<o;_++)n[_]=s[_];return N(s),O.free(a),{code:E,body:n}}(r.params);R({code:e.code,body:e.body},[e.body.buffer]);break;default:R({code:_.ErrorCodes.ARGON2WASM_BAD_REQUEST})}};
